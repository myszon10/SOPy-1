--- LAB3 TUTORIAL ---
prog17 - tworzenie wątków, każdy wątek liczy pi za pomocą monte carlo, łączenie wątków i finalny wynik, losowy seed dla każdego wątku

prog18 - obliczanie wartości oczekiwanej z kulkami, odłączone wątki zrzucają kulki i aktualizują liczniki chronione mutexami, wątek główny monitoruje postęp i liczy wartość oczekiwaną

prog19 - obsługa sygnałów w osobnym wątku, SIGINT usuwa losowy element z listy, SIGQUIT kończy program, współdzielone dane chronione mutexami, wątek główny co sekundę wyświetla listę

prog20 - symulacja życia studentów: każdy student to wątek, przechodzący przez kolejne lata studiów. Wątek główny losowo wyrzuca studentów, anulując ich wątki. Liczniki studentów na każdym roku chronione mutexami, anulowanie wątków obsługiwane przez cleanup handler

--- ZAD1 ---
n wątków, każdy wątek losuje mnożnik M [2-100]. Wątek główny co 0.1s zwiększa licznik L o jeden (od 1). Wątki sprawdzają, czy L % M == 0. Chroniony dostęp do L, wszystkie wątki muszą zdążyć sprawdzić podzielność. Program kończy się po otrzymaniu SIGINT, po odebraniu sygnału wątki poboczne się kończą a wątek główny je łączy

etap1 - tworzenie n wątków, każdy wątek wypisuje *, wątęk główny czeka na zakończenie wszystkich wątków

etap2 - wątki poboczne losują swoje mnożniki na ekran

etap3 - wątek główny wykonuje odliczanie, poboczne sprawdzają podzielność, bez synchronizacji/ochrony licznika

etap4 - L zwiększane tylko gdy każdy wątek sprawdzi podzielność (zmienna pomocnicza i mutexy)

etap5 - obsługa sygnału SIGINT i odpowiednie zwalnianie pamięci/kończenie mutexów/odblokowanie maski

--- ZAD3 ---
Symulacja wyścigu psów na torze o długości n z m psami (pies = wątek). Psy losowo poruszają się po torze i zmieniają kierunek. Wątki synchronizowane mutexami, SIGINT kończy wyścig 

etap1 - Inicjalizacja tory, każdy wątek losuje jedną pozycję na torze, zwiększa jej wartość o 1 i kończy działanie. Wątek główny potem wypisuje stan toru

etap2 - Wprowadzenie logiki poruszania się psów, bez synchronizacji. Każdy pies losowo śpi, losuje odległość do przemieszczenia i przesuwa się, jeśli nie ma tam psa. Co 1s wątek główny wypisuje trasę

etap3 - Dodanie synchronizacji (mutexy)

etap4 - Wątek główny odbiera sygnał SIGINT, kończy wtedy wszystkie wątki i wyświetla komunikat

--- WORKSHOP ---
etap1 - implementacja struktury circular buffer, testowanie struktury (wątki-producenci dodają napisy do bufora, a wątki-konsumenci je zdejmują)

etap2 - rekurencyjne przechodzenie przez foldery, wątki równolegle pobierają ścieżki z bufora i informują o odebraniu pliku (po czym go usuwają z bufora)

etap3 - wątek zlicza liczbę małych i dużych liter w pliku, dodaje je do globalnej tablicy, a jak kończy pracę wypisuje na ekran liczbę znaków w pliku (wypisywanie i modyfikacja tablicy mutexami - każdy znak oddzielny mutex)

