void child_work(int fd, int R) {
    pid_t pid = getpid();
    // Odczyt jednego bajtu z potoku indywidualnego fd
    // To "sygnał" od nauczyciela, że mamy odpowiedzieć
    char dummy;
    if (read(fd, &dummy, 1) < 1) {
        ERR("read in child");
    }

    // Na ekran
    printf("Student %d: HERE!\n", pid);

    // Do wspólnego potoku R
    // Wysyłamy informację typu: "Student 47807: HERE!\n"
    char msg[64];
    int len = snprintf(msg, sizeof(msg), "Student %d: HERE!\n", pid);
    if (len < 0 || len >= (int)sizeof(msg)) {
        ERR("snprintf in child");
    }
    if (write(R, msg, len) < 0) {
        ERR("write to R in child");
    }

    // Koniec tego etapu
    // W pełnym zadaniu można byłoby tu przechodzić do kolejnych etapów.
    // Ale w "sprawdzaniu obecności" wystarczy zakończyć.
}
